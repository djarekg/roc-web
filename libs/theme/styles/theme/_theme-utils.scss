@use '@angular/material' as mat;
@use './theme-variables' as theme-vars;
@use '../layout/layout-variables' as layout-vars;
@use '../typography/typography-variables' as typography-vars;
@use '../material' as mat-utils;

@function dark-theme(
  $primary,
  $accent,
  $warn: mat.define-palette(mat.$red-palette),
  $success: mat.define-palette(mat.$green-palette),
  $danger: mat.define-palette(mat.$red-palette)
) {
  $dark-theme: mat.define-dark-theme(
    (
      color: (
        primary: $primary,
        accent: $accent,
        warn: $warn,
      ),
      typography: typography-vars.$typography-config,
    )
  );

  $danger-success: (
    success: $success,
    danger: $danger,
  );

  @return map-merge($dark-theme, $danger-success);
}

@function light-theme(
  $primary,
  $accent,
  $warn: mat.define-palette(mat.$red-palette),
  $success: mat.define-palette(mat.$green-palette),
  $danger: mat.define-palette(mat.$red-palette)
) {
  $light-theme: mat.define-light-theme(
    (
      color: (
        primary: $primary,
        accent: $accent,
        warn: $warn,
      ),
      typography: typography-vars.$typography-config,
    )
  );

  $danger-success: (
    success: $success,
    danger: $danger,
  );

  @return map-merge($light-theme, $danger-success);
}

@mixin component-overrides {
  @include mat-utils.button-overrides();
  @include mat-utils.card-overrides();
  @include mat-utils.form-field-overrides();
  @include mat-utils.sidenav-overrides();
}
